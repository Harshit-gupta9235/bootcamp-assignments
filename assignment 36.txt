1. Using STL Array gets and sets a reference to an element based on a given index.

ans:

#include<iostream>
#include<array>
using namespace std;
int main(){
    array<int,5>a;
    for (int i = 0; i <a.size(); i++)
    {
       cin>>a[i];
    }
   array<int,5>::iterator p=&a[2];
   cout<<*p<<endl;
    return 0;
}

2. Using STL Array returns the total number of elements in the array.

ans:

#include<array>
using namespace std;
int main(){
    array<int,5>a;
    for (int i = 0; i <a.size(); i++)
    {
       cin>>a[i];
    }
    int k=a.size();
    cout<<k;
    return 0;
}
3. Find the first and last element using the STL array.

ans:

#include<iostream>
#include<array>
using namespace std;
int main(){
    array<int,5>a;
    for (int i = 0; i <a.size(); i++)
    {
       cin>>a[i];
    }
    cout<<"first element is \n";
    cout<<a.front()<<endl;
    cout<<"last element is  "<<a.back();
    return 0;
}

4. Returns the element from the given index using the STL array.

ans:

#include<iostream>
#include<array>
using namespace std;
int main(){
    array<int,5>a;
    for (int i = 0; i <a.size(); i++)
    {
       cin>>a[i];
    }
    cout<<"from which index u want to print element ?\n";
    int k;
    cin>>k;
    cout<<a.at(k)<<endl;
    return 0;
}

5. C++ STL program to demonstrate example of array::rbegin() and array::rend()
functions

ans:


6. Using STL to check whether an array is empty or not.

ans:

#include<iostream>
#include<array>
using namespace std;
int main(){
    array<int,5>a;
    for (int i = 0; i <a.size(); i++)
    {
       cin>>a[i];
    }
   if(a.empty()==true){cout<<"array is empty\n";}
    else{cout<<"array is not empty\n";}
    return 0;
}

7. Sort an array in ascending order using sort() function in C++ STL

ans:

#include<iostream>
#include<array>
using namespace std;
void sort(array<int,5>&b){
  for(int i=0;i<b.size()-1;i++){
    for(int j=0;j<b.size()-1;j++){
      if(b.at(j)>b.at(j+1)){swap(b[j],b[j+1]);}
    }
  }
}
int main(){
  array<int,5>a;
  cout<<"enter 5 elements\n";
  for(int i=0;i<a.size();i++)
  cin>>a[i];
  sort(a);
  for(int i=0;i<a.size();i++)
  cout<<a[i]<<"  ";
  return 0;
}
8. Sort an array in descending order using sort() function in C++ STL

ans:

#include<iostream>
#include<array>
using namespace std;
void sort(array<int,5>&b){
  for(int i=0;i<b.size()-1;i++){
    for(int j=0;j<b.size()-1;j++){
      if(b.at(j)<b.at(j+1)){swap(b[j],b[j+1]);}
    }
  }
}
int main(){
  array<int,5>a;
  cout<<"enter 5 elements\n";
  for(int i=0;i<a.size();i++)
  cin>>a[i];
  sort(a);
  for(int i=0;i<a.size();i++)
  cout<<a[i]<<"  ";
  return 0;
}
9. C++ program to find the integers which come an odd number of times in an array
using C++ STL.

ans:

#include<iostream>
#include<array>
using namespace std;
void sp(array<int,5>&b){
  for(int i=0;i<b.size();i++){
    int count=0;
    for(int j=i+1;j<b.size();j++){
      if(b.at(i)==b.at(j)){count++;}
    }if(count%2==1)
    cout<<b[i]<<"  ";
  }
}
int main(){
  array<int,5>a;
  cout<<"enter 5 elements\n";
  for(int i=0;i<a.size();i++)
  cin>>a[i];
  sp(a);
 
  return 0;
}
10. Given an integer array nums , return an array answer such that answer[i] is equal to
the product of all the elements of nums except nums[i] #include<iostream>




