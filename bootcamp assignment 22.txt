1. Define a function to input variable length string and store it in an array without
memory wastage.

#include<stdio.h>
#include<stdlib.h>
char* input(int size)
{
	char*q;
	q=(char*)calloc(20,1);
	fgets(q,20,stdin);
  return q;
}
	
void main()
{ char*p,n,i;
  //scanf("%d",&n);
  p=input(20);
  for(i=0;*(p+i);i++)
      printf("%c",p[i]);
  printf("\n");
  free(p); 
}
  


2. Write a program to ask the user to input a number of data values he would like to
enter then create an array dynamically to accommodate the data values. Now take
the input from the user and display the average of data values.

#include<stdio.h>
#include<stdlib.h>
int* input(int size)
{
	int*q,i;
	q=(int*)calloc(size,4);
	for(i=0;i<size;i++)
	 scanf("%d",q+i);
  return q;
}
	
void main()
{ int*p,n,i,s;
  scanf("%d",&n);
  p=input(n);
  for(i=0;i<n;i++)
      s+=p[i];
  printf("%d",s);
  free(p); 
}
  


3. Write a program to calculate the sum of n numbers entered by the user using malloc
and free.

#include<stdio.h>
#include<stdlib.h>
int* input(int);
void main()
{ int*p,n,i,s;
  scanf("%d",&n);
  p=input(n);
  for(i=0;i<n;i++)
      s+=p[i];
  printf("%d",s);
  free(p); 
}  
int* input(int size)
{
	int*q,i;
	q=(int*)calloc(size,4);
	for(i=0;i<size;i++)
	 scanf("%d",q+i);
  return q;
}	


4. Write a program to input and print text using dynamic memory allocation.

#include<stdio.h>
#include<stdlib.h>
void main()
{ char*p;int i,s;
  //scanf("%d",&n);
  p=(char*)malloc(20);
  fgets(p,20,stdin);
  for(i=0;*(p+i);i++)
       printf("%c",*(p+i));
  free(p); 
}  


5. Write a program to read a one dimensional array, print sum of all elements along with
inputted array elements using dynamic memory allocation.

#include<stdio.h>
#include<stdlib.h>
void main()
{ int*p,i,s=0;
  //scanf("%d",&n);
  p=(int*)calloc(5,4);
  for(i=0;i<5;i++)
  {
    scanf("%d",&p[i]);       
  }
  for(i=0;i<5;i++)
  {
    s+=*(p+i);
    printf("%d\n",*(p+i));
  }
  printf("%d",s);
  free(p); 
}  


6. Write a program in C to find the largest element using Dynamic Memory Allocation.

#include<stdio.h>
#include<stdlib.h>
void main()
{ int*p,i,s=0;
  //scanf("%d",&n);
  p=(int*)calloc(5,4);
  
  for(i=0;i<5;i++)
  {
    scanf("%d",&p[i]);       
  }
  for(i=0;i<5;i++)
  {
    if(s<p[i])
       s=p[i];
  }
  printf(" largest number is %d",s);
  free(p); 
}  


7. Write a program to demonstrate memory leak in C.

#include<stdio.h>
#include<stdlib.h>
void main()
{ int*p,i;
  p=(int*)malloc(10);  
  for(i=0;i<4;i++)
  {
    scanf("%d",&p[i]);       
  }
  for(i=0;i<4;i++)
  {
   printf("%d",p[i]);    
  }
  free(p); 
}  


8. Write a program to demonstrate dangling pointers in C.
9. Write a program to allocate memory dynamically of the size in bytes entered by the
user. Also handle the case when memory allocation is failed.
10. Find out the maximum and minimum from an array using dynamic memory allocation
in C.

#include<stdio.h>
#include<stdlib.h>
void main()
{ int*p,i,s=0,l=99999;
  //scanf("%d",&n);
  p=(int*)calloc(5,4);
  
  for(i=0;i<5;i++)
  {
    scanf("%d",&p[i]);       
  }
  for(i=0;i<5;i++)
  {
    if(s<p[i])
       s=p[i];
  }
  for(i=0;i<5;i++)
  {
    if(l>p[i])
       l=p[i];
  }  
  printf(" smallest and largest number is %d,%d respectively",l,s);
  free(p); 
}  

